---
- name: Verify
  hosts: all
  gather_facts: false

  tasks:

    # Only collect network facts to reduce setup time
    - name: Gathering Facts
      setup:
        gather_subset:
          - 'network'

    - name: Set local_dns variable for dig
      set_fact:
        local_dns: "{{ '@' + ansible_default_ipv4.address }}"

    - name: IPv4 Forward lookups
      assert:
        that:
          - lookup('dig', 'ns1.acme-inc.com', local_dns )    == '10.11.0.1'
          - lookup('dig', 'ns2.acme-inc.com', local_dns)     == '10.11.0.2'
          - lookup('dig', 'srv001.acme-inc.com', local_dns)  == '10.11.1.1'
          - lookup('dig', 'srv002.acme-inc.com', local_dns)  == '10.11.1.2'
          - lookup('dig', 'mail001.acme-inc.com', local_dns) == '10.11.2.1'
          - lookup('dig', 'mail002.acme-inc.com', local_dns) == '10.11.2.2'
          - lookup('dig', 'mail003.acme-inc.com', local_dns) == '10.11.2.3'
          - lookup('dig', 'srv010.acme-inc.com', local_dns)  == '10.11.0.10'
          - lookup('dig', 'srv011.acme-inc.com', local_dns)  == '10.11.0.11'
          - lookup('dig', 'srv012.acme-inc.com', local_dns)  == '10.11.0.12'
          - lookup('dig', 'srv001.example.com', local_dns)   == '192.0.2.1'
          - lookup('dig', 'srv002.example.com', local_dns)   == '192.0.2.2'
          - lookup('dig', 'mail001.example.com', local_dns)  == '192.0.2.10'

    - name: IPv4 Reverse lookups
      assert:
        that:
          - lookup('dig', '10.11.0.1/PTR', local_dns)  == 'ns1.acme-inc.com.'
          - lookup('dig', '10.11.0.2/PTR', local_dns)  == 'ns2.acme-inc.com.'
          - lookup('dig', '10.11.1.1/PTR', local_dns)  == 'srv001.acme-inc.com.'
          - lookup('dig', '10.11.1.2/PTR', local_dns)  == 'srv002.acme-inc.com.'
          - lookup('dig', '10.11.2.1/PTR', local_dns)  == 'mail001.acme-inc.com.'
          - lookup('dig', '10.11.2.2/PTR', local_dns)  == 'mail002.acme-inc.com.'
          - lookup('dig', '10.11.2.3/PTR', local_dns)  == 'mail003.acme-inc.com.'
          - lookup('dig', '10.11.0.10/PTR', local_dns) == 'srv010.acme-inc.com.'
          - lookup('dig', '10.11.0.11/PTR', local_dns) == 'srv011.acme-inc.com.'
          - lookup('dig', '10.11.0.12/PTR', local_dns) == 'srv012.acme-inc.com.'
          - lookup('dig', '192.0.2.1/PTR', local_dns)  == 'srv001.example.com.'
          - lookup('dig', '192.0.2.2/PTR', local_dns)  == 'srv002.example.com.'
          - lookup('dig', '192.0.2.10/PTR', local_dns) == 'mail001.example.com.'

    - name: IPv4 Alias lookups
      assert:
        that:
          - lookup('dig', 'www.acme-inc.com', local_dns)      == '10.11.1.1'
          - lookup('dig', 'mysql.acme-inc.com', local_dns)    == '10.11.1.2'
          - lookup('dig', 'smtp.acme-inc.com', local_dns)     == '10.11.2.1'
          - lookup('dig', 'mail-in.acme-inc.com', local_dns)  == '10.11.2.1'
          - lookup('dig', 'imap.acme-inc.com', local_dns)     == '10.11.2.3'
          - lookup('dig', 'mail-out.acme-inc.com', local_dns) == '10.11.2.3'
          - lookup('dig', 'www.example.com', local_dns)       == '192.0.2.1'

    - name: IPv6 Forward lookups
      assert:
        that:
          - lookup('dig', 'srv001.acme-inc.com/AAAA', local_dns)  == '2001:db8::1'
          - lookup('dig', 'srv002.acme-inc.com/AAAA', local_dns)  == '2001:db8::2'
          - lookup('dig', 'mail001.acme-inc.com/AAAA', local_dns) == '2001:db8::d:1'
          - lookup('dig', 'mail002.acme-inc.com/AAAA', local_dns) == '2001:db8::d:2'
          - lookup('dig', 'mail003.acme-inc.com/AAAA', local_dns) == '2001:db8::d:3'
          - lookup('dig', 'srv001.example.com/AAAA', local_dns)   == '2001:db9::1'

    - name: IPv6 Reverse lookups
      assert:
        that:
          - lookup('dig', '2001:db8::1/PTR', local_dns)   == 'srv001.acme-inc.com.'
          - lookup('dig', '2001:db8::2/PTR', local_dns)   == 'srv002.acme-inc.com.'
          - lookup('dig', '2001:db8::d:1/PTR', local_dns) == 'mail001.acme-inc.com.'
          - lookup('dig', '2001:db8::d:2/PTR', local_dns) == 'mail002.acme-inc.com.'
          - lookup('dig', '2001:db8::d:3/PTR', local_dns) == 'mail003.acme-inc.com.'
          - lookup('dig', '2001:db8::d:3/PTR', local_dns) == 'mail003.acme-inc.com.'
          - lookup('dig', '2001:db9::1/PTR', local_dns)   == 'srv001.example.com.'

    - name: NS records lookup
      assert:
        that:
          - lookup('dig', 'acme-inc.com/NS', local_dns).split(',') | sort | join(',') == 'ns1.acme-inc.com.,ns2.acme-inc.com.'
          - lookup('dig', 'example.com/NS', local_dns).split(',')  | sort | join(',') == 'ns1.acme-inc.com.,ns2.acme-inc.com.'

    - name: MX records lookup
      assert:
        that:
          - lookup('dig', 'acme-inc.com/MX', local_dns).split(',') | sort | join(',') == '10 mail001.acme-inc.com.,20 mail002.acme-inc.com.'
          - lookup('dig', 'example.com/MX', local_dns).split(',')  | sort | join(',') == '10 mail001.example.com.'

    - name: Service records lookup
      assert:
        that:
          - lookup('dig', '_ldap._tcp.acme-inc.com/SRV', local_dns) == '0 100 88 srv010.acme-inc.com.'

    - name: TXT records lookup
      assert:
        that:
          - lookup('dig', '_kerberos.acme-inc.com/TXT', local_dns) == 'KERBEROS.ACME-INC.COM'
          - lookup('dig', 'acme-inc.com/TXT', local_dns).split(',') | sort | join(',') == 'more text,some text'

    - name: "Add A Type Record with DYNDNS on Primary"
      nsupdate:
        key_name: "ansible"
        key_secret: "{{ bind_key_ansible }}"
        server: 10.11.0.1
        zone: "acme-inc.com"
        record: "dyndns-test01"
        value: "10.11.3.10"
        ttl: 1209600
        state: present
      run_once: true

    - name: "Add IPV4 PTR Type Record with DYNDNS on Primary"
      nsupdate:
        key_name: "ansible"
        key_secret: "{{ bind_key_ansible }}"
        server: 10.11.0.1
        record: "10.3.11.10.in-addr.arpa."
        type: "PTR"
        value: "dyndns-test01.acme-inc.com."
        ttl: 1209600
        state: present
      run_once: true

    - name: "Add AAAA Type Record with DYNDNS on Primary"
      nsupdate:
        key_name: "ansible"
        key_secret: "{{ bind_key_ansible }}"
        server: 10.11.0.1
        zone: "acme-inc.com"
        record: "dyndns-test03"
        value: "2001:db8::d:4"
        type: "AAAA"
        ttl: 1209600
        state: present
      run_once: true

    - name: "Add IPV6 PTR Type Record with DYNDNS on Primary"
      nsupdate:
        key_name: "ansible"
        key_secret: "{{ bind_key_ansible }}"
        server: 10.11.0.1
        record: "4.0.0.0.d.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa."
        type: "PTR"
        value: "dyndns-test03.acme-inc.com."
        ttl: 1209600
        state: present
      run_once: true

    - name: "Add A Type Record with DYNDNS on Secondary"
      nsupdate:
        key_name: "ansible"
        key_secret: "{{ bind_key_ansible }}"
        server: 10.11.0.2
        zone: "acme-inc.com"
        record: "dyndns-test02"
        value: "10.11.3.11"
        ttl: 1209600
        state: present
      run_once: true

    - name: "Add IPV4 PTR Type Record with DYNDNS on Secondary"
      nsupdate:
        key_name: "ansible"
        key_secret: "{{ bind_key_ansible }}"
        server: 10.11.0.2
        record: "11.3.11.10.in-addr.arpa."
        type: "PTR"
        value: "dyndns-test02.acme-inc.com."
        ttl: 1209600
        state: present
      run_once: true

    - name: "Add AAAA Type Record with DYNDNS on Secondary"
      nsupdate:
        key_name: "ansible"
        key_secret: "{{ bind_key_ansible }}"
        server: 10.11.0.2
        zone: "acme-inc.com"
        record: "dyndns-test04"
        value: "2001:db8::d:5"
        type: "AAAA"
        ttl: 1209600
        state: present
      run_once: true

    - name: "Add IPV6 PTR Type Record with DYNDNS on Secondary"
      nsupdate:
        key_name: "ansible"
        key_secret: "{{ bind_key_ansible }}"
        server: 10.11.0.1
        record: "5.0.0.0.d.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa."
        type: "PTR"
        value: "dyndns-test04.acme-inc.com."
        ttl: 1209600
        state: present
      run_once: true

    - name: Assert Dynamic Records
      assert:
        that:
          - lookup('dig', 'dyndns-test01.acme-inc.com', local_dns ) == '10.11.3.10'
          - lookup('dig', 'dyndns-test02.acme-inc.com', local_dns ) == '10.11.3.11'
          - lookup('dig', 'dyndns-test03.acme-inc.com/AAAA', local_dns ) == '2001:db8::d:4'
          - lookup('dig', 'dyndns-test04.acme-inc.com/AAAA', local_dns ) == '2001:db8::d:5'
          - lookup('dig', '10.11.3.10/PTR', local_dns) == 'dyndns-test01.acme-inc.com.'
          - lookup('dig', '10.11.3.11/PTR', local_dns) == 'dyndns-test02.acme-inc.com.'
          - lookup('dig', '2001:db8::d:4/PTR', local_dns) == 'dyndns-test03.acme-inc.com.'
          - lookup('dig', '2001:db8::d:5/PTR', local_dns) == 'dyndns-test04.acme-inc.com.'
